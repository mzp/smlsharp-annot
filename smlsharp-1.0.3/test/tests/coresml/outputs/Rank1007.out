val id = fn : ['a .'a -> 'a]
val inc = fn : int -> int
exception E : exn
../tests/coresml/tests/Rank1007.sml:25.1-25.49 Warning:
  dummy type variable(s) X0 are introduced due to value restriction
val fHanldePolyBodyRaise = fn : X0 -> X0
../tests/coresml/tests/Rank1007.sml:26.28-26.49 Error:
  operator and operand don't agree
                                                       operator domain: X0
  operand: 'A#{int, IntInf.int}

../tests/coresml/tests/Rank1007.sml:28.1-28.46 Warning:
  dummy type variable(s) X0 are introduced due to value restriction
val fHanldePolyBodyPolyVar = fn : X0 -> X0
../tests/coresml/tests/Rank1007.sml:29.30-29.53 Error:
  operator and operand don't agree
                                                       operator domain: X0
  operand: 'A#{int, IntInf.int}

../tests/coresml/tests/Rank1007.sml:31.1-31.55 Warning:
  dummy type variable(s) X0 are introduced due to value restriction
val fHanldePolyBodyPolyExp = fn : X0 -> X0
../tests/coresml/tests/Rank1007.sml:32.30-32.53 Error:
  operator and operand don't agree
                                                       operator domain: X0
  operand: 'A#{int, IntInf.int}

val fHanldePolyBodyMonoExp = fn : int -> int
val xHanldePolyBodyMonoExp = 5 : int
val fHanldeMonoBodyRaise = fn : int -> int
val xHanldeMonoBodyRaise = 2 : int
val fHanldeMonoBodyPolyVar = fn : int -> int
val xHanldeMonoBodyPolyVar = 3 : int
val fHanldeMonoBodyPolyExp = fn : int -> int
val xHanldeMonoBodyPolyExp = 4 : int
val fHanldeMonoBodyMonoExp = fn : int -> int
val xHanldeMonoBodyMonoExp = 5 : int
