functor MonoVectorBase (B :
sig type elem type array val sub : array * int -> elem end) :
sig val concat : ['a#{buffer: B.array option}.'a list -> unit] end
../tests/bugs/tests/issue146.6.sml:9.3-17.9 Warning:
  match nonexhaustive
           :: (vector, _) => ...
../tests/bugs/tests/issue146.6.sml:14.9-16.27 Warning:
  match nonexhaustive
                                                                (0, _) => ...
                                                                (_, SOME _) => ...
structure Operations
: sig type array = unit type elem = unit val sub : unit * int -> unit end
structure UnitVector
: sig val concat : ['a#{buffer:Operations.array option} .'a list  -> unit] end
