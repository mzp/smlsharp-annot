val getOpt1 = 2 : int
val getOpt2 = 1 : int
val isSome1 = false : bool
val isSome2 = true : bool
val valOf1 = 2 : int
val valOf2 = 1 : int
val filterFun = fn : int -> bool
val filter1 = SOME 1 : int Option.option
val filter2 = NONE : int Option.option
val join1 = NONE : int Option.option
val join2 = NONE : int Option.option
val join3 = SOME 1 : int Option.option
val mapFun = fn : int -> int * int
val map1 = NONE : (int * int) Option.option
val map2 = SOME (2,1) : (int * int) Option.option
val mapPartialFun = fn : bool -> int Option.option
val mapPartial1 = NONE : int Option.option
val mapPartial2 = SOME 1 : int Option.option
val mapPartial3 = NONE : int Option.option
val composeFun1 = fn : ['a.'a -> 'a * int]
val composeFun2 = fn : bool -> int Option.option
val compose1 = SOME (1,1) : (int * int) Option.option
val compose2 = NONE : (int * int) Option.option
val composePartialFun1 = fn : int -> bool Option.option
val composePartialFun2 = fn : int -> int Option.option
val composePartial1 = NONE : bool Option.option
val composePartial2 = SOME true : bool Option.option
val composePartial3 = NONE : bool Option.option
