structure AS : MONO_ARRAY_SLICE
structure A : MONO_ARRAY
structure VS : MONO_VECTOR_SLICE
structure V : MONO_VECTOR
val Words2AS = fn : byte list -> AS.slice
val Words2VS = fn : byte list -> VS.slice
val AS2L = fn : AS.slice -> byte list
val VS2L = fn : VS.slice -> byte list
val V2L = fn : A.array -> byte list
val L2V = fn : V.elem list -> V.vector
val A2L = fn : A.array -> byte list
val L2A = fn : A.elem list -> A.array
val makeArray = fn : int -> A.array
val testUpdate = fn : int * int * int * int -> byte list * byte list
val update_0_0_0_0 = ([0wx63],[0wx63]) : byte list * byte list
val update_1_0_1_0 = ( [0wx9], [0wx9] ) : byte list * byte list
val update_1_0_1_1 = ( [0wx63], [0wx63] ) : byte list * byte list
val update_5_1_3_m1 = ([0wx63],[0wx63]) : byte list * byte list
val update_5_1_3_0 = ( [0wx0,0wx9,0wx2,0wx3,0wx4], [0wx9,0wx2,0wx3] ) : byte list * byte list
val update_5_1_3_2 = ([0wx0,0wx1,0wx2,0wx9,0wx4],[0wx1,0wx2,0wx9]) : byte list * byte list
val update_5_1_3_3 = ( [0wx63], [0wx63] ) : byte list * byte list
val testCopy = fn : AS.slice * A.array * int -> byte list * byte list
val copy_0_3_0 = ([],[0wx9,0wx8,0wx7]) : byte list * byte list
val copy_1_3_0 = ([0wx1],[0wx1,0wx8,0wx7]) : byte list * byte list
val copy_2_3_0 = ([0wx1,0wx2],[0wx1,0wx2,0wx7]) : byte list * byte list
val copy_3_0_0 = ([0wx63],[0wx63]) : byte list * byte list
val copy_3_1_0 = ([0wx63],[0wx63]) : byte list * byte list
val copy_3_2_0 = ([0wx63],[0wx63]) : byte list * byte list
val copy_3_3_0 = ([0wx1,0wx2,0wx3],[0wx1,0wx2,0wx3]) : byte list * byte list
val copy_3_4_0 = ([0wx1,0wx2,0wx3],[0wx1,0wx2,0wx3,0wx6]) : byte list * byte list
val copy_3_4_m1 = ([0wx63],[0wx63]) : byte list * byte list
val copy_3_4_0 = ([0wx1,0wx2,0wx3],[0wx1,0wx2,0wx3,0wx6]) : byte list * byte list
val copy_3_4_1 = ([0wx1,0wx2,0wx3],[0wx9,0wx1,0wx2,0wx3]) : byte list * byte list
val copy_3_4_2 = ([0wx63],[0wx63]) : byte list * byte list
val testCopyVec = fn : VS.slice * A.array * int -> byte list * byte list
val copyVec_0_3_0 = ([],[0wx9,0wx8,0wx7]) : byte list * byte list
val copyVec_1_3_0 = ([0wx1],[0wx1,0wx8,0wx7]) : byte list * byte list
val copyVec_2_3_0 = ([0wx1,0wx2],[0wx1,0wx2,0wx7]) : byte list * byte list
val copyVec_3_0_0 = ([0wx63],[0wx63]) : byte list * byte list
val copyVec_3_1_0 = ([0wx63],[0wx63]) : byte list * byte list
val copyVec_3_2_0 = ([0wx63],[0wx63]) : byte list * byte list
val copyVec_3_3_0 = ([0wx1,0wx2,0wx3],[0wx1,0wx2,0wx3]) : byte list * byte list
val copyVec_3_4_0 = ([0wx1,0wx2,0wx3],[0wx1,0wx2,0wx3,0wx6]) : byte list * byte list
val copyVec_3_4_m1 = ([0wx63],[0wx63]) : byte list * byte list
val copyVec_3_4_0 = ([0wx1,0wx2,0wx3],[0wx1,0wx2,0wx3,0wx6]) : byte list * byte list
val copyVec_3_4_1 = ([0wx1,0wx2,0wx3],[0wx9,0wx1,0wx2,0wx3]) : byte list * byte list
val copyVec_3_4_2 = ([0wx63],[0wx63]) : byte list * byte list
