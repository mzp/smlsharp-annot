val null1 = true : bool
val null2 = false : bool
val length1 = 0 : int
val length2 = 1 : int
val length3 = 2 : int
val append1 = [] : int List.list
val append2 = [1] : int List.list
val append3 = [1] : int List.list
val append4 = [1,2] : int List.list
val append5 = [1,2] : int List.list
val append6 = [1,2] : int List.list
val append7 = [1,2,2] : int List.list
val append8 = [1,2,2,3] : int List.list
val append9 = [1,2,3] : int List.list
val hd1 = 1 : int
val hd2 = 1 : int
val hd3 = 1 : int
val tl1 = [1] : int List.list
val tl2 = [] : int List.list
val tl3 = [2] : int List.list
val last1 = 1 : int
val last2 = 1 : int
val last3 = 2 : int
val getItem1 = NONE : (int * int List.list) Option.option
val getItem2 = SOME (1,[]) : (int * int List.list) Option.option
val getItem3 = SOME (1,[2]) : (int * int List.list) Option.option
val nth00 = 1 : int
val nth0m1 = 1 : int
val nth01 = 1 : int
val nth10 = 1 : int
val nth11 = 1 : int
val nth1m1 = 1 : int
val nth20 = 1 : int
val nth21 = 2 : int
val nth22 = 3 : int
val take00 = [] : int List.list
val take0m1 = [3] : int List.list
val take01 = [3] : int List.list
val take10 = [] : int List.list
val take11 = [2] : int List.list
val take1m1 = [3] : int List.list
val take12 = [3] : int List.list
val take20 = [] : int List.list
val take21 = [1] : int List.list
val take22 = [1,2] : int List.list
val take23 = [3] : int List.list
val drop00 = [] : int List.list
val drop0m1 = [3] : int List.list
val drop01 = [3] : int List.list
val drop10 = [1] : int List.list
val drop11 = [] : int List.list
val drop1m1 = [3] : int List.list
val drop12 = [3] : int List.list
val drop20 = [1,2] : int List.list
val drop21 = [2] : int List.list
val drop22 = [] : int List.list
val drop23 = [3] : int List.list
val rev0 = [] : int List.list
val rev1 = [1] : int List.list
val rev2 = [2,1] : int List.list
val rev3 = [3,2,1] : int List.list
val concat0 = [] : int List.list
val concat10 = [] : int List.list
val concat200 = [] : int List.list
val concat11 = [1] : int List.list
val concat201 = [1] : int List.list
val concat210 = [1] : int List.list
val concat211 = [1,2] : int List.list
val concat222 = [1,2,3,4] : int List.list
val concat3303 = [1,2,3,7,8,9] : int List.list
val concat3333 = [1,2,3,4,5,6,7,8,9] : int List.list
val revAppend00 = [] : int List.list
val revAppend01 = [1] : int List.list
val revAppend10 = [1] : int List.list
val revAppend11 = [1,2] : int List.list
val revAppend20 = [2,1] : int List.list
val revAppend02 = [1,2] : int List.list
val revAppend22 = [2,1,3,4] : int List.list
val revAppend33 = [3,2,1,4,5,6] : int List.list
val appFun = fn : string -> unit
val app0 = () : unit
aval app1 = () : unit
abval app2 = () : unit
abcval app3 = () : unit
val mapFun = fn : int -> int
val map0 = [] : int List.list
val map1 = [2] : int List.list
val map2 = [2,3] : int List.list
val map3 = [2,3,4] : int List.list
val mapPartialFun = fn : int -> int option
val mapPartial0 = [] : int List.list
val mapPartial10 = [] : int List.list
val mapPartial11 = [1] : int List.list
val mapPartial200 = [] : int List.list
val mapPartial201 = [1] : int List.list
val mapPartial210 = [1] : int List.list
val mapPartial211 = [1,2] : int List.list
val mapPartial3010 = [1] : int List.list
val mapPartial3101 = [1,2] : int List.list
val mapPartial3111 = [1,2,3] : int List.list
val findFun = fn : int -> bool
val find0 = NONE : int Option.option
val find10 = NONE : int Option.option
val find11 = SOME 0 : int Option.option
val find200 = NONE : int Option.option
val find201 = SOME 2 : int Option.option
val find210 = SOME 0 : int Option.option
val find211 = SOME 2 : int Option.option
val find3101 = SOME 2 : int Option.option
val find3010 = SOME 2 : int Option.option
val find3111 = SOME 2 : int Option.option
val filterFun = fn : int -> bool
val filter0 = [] : int List.list
val filter10 = [] : int List.list
val filter11 = [0] : int List.list
val filter200 = [] : int List.list
val filter201 = [2] : int List.list
val filter210 = [0] : int List.list
val filter211 = [2,4] : int List.list
val filter3101 = [2,4] : int List.list
val filter3010 = [2] : int List.list
val filter3111 = [2,4,6] : int List.list
val partitionFun = fn : int -> bool
val partition0 = ([],[]) : int List.list * int List.list
val partition10 = ([],[1]) : int List.list * int List.list
val partition11 = ([0],[]) : int List.list * int List.list
val partition200 = ([],[1,3]) : int List.list * int List.list
val partition201 = ([2],[1]) : int List.list * int List.list
val partition210 = ([0],[1]) : int List.list * int List.list
val partition211 = ([2,4],[]) : int List.list * int List.list
val partition3101 = ([2,4],[1]) : int List.list * int List.list
val partition3010 = ([2],[1,3]) : int List.list * int List.list
val partition3111 = ([2,4,6],[]) : int List.list * int List.list
val foldlFun = fn : ['a.'a * 'a list -> 'a list]
val foldl0 = [] : int list
val foldl1 = [1] : int list
val foldl2 = [2,1] : int list
val foldl3 = [3,2,1] : int list
val foldrFun = fn : ['a.'a * 'a list -> 'a list]
val foldr0 = [] : int list
val foldr1 = [1] : int list
val foldr2 = [1,2] : int list
val foldr3 = [1,2,3] : int list
val existsFun = fn : int -> bool
val exists0 = false : bool
val exists10 = false : bool
val exists11 = true : bool
val exists200 = false : bool
val exists201 = true : bool
val exists210 = true : bool
val exists211 = true : bool
val exists3101 = true : bool
val exists3010 = true : bool
val exists3111 = true : bool
val allFun = fn : int -> bool
val all0 = true : bool
val all10 = false : bool
val all11 = true : bool
val all200 = false : bool
val all201 = false : bool
val all210 = false : bool
val all211 = true : bool
val all3101 = false : bool
val all3010 = false : bool
val all3111 = true : bool
val tabulateFun = fn : ['a.'a -> 'a]
val tabulate0 = [] : int List.list
val tabulate1 = [0] : int List.list
val tabulate2 = [0,1] : int List.list
val tabulatem1 = [999] : int List.list
