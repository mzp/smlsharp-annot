val maxWord = 0wxffffffff : Word.word
val toLargeWord_0 = 0wx0 : LargeWord.word
val toLargeWord_123 = 0wx123 : LargeWord.word
val toLargeWord_7FFFFFFF = 0wx7fffffff : LargeWord.word
val toLargeWordX_0 = 0wx0 : LargeWord.word
val toLargeWordX_123 = 0wx123 : LargeWord.word
val toLargeWordX_7FFFFFFF = 0wx7fffffff : LargeWord.word
val fromLargeWord_0 = 0wx0 : Word.word
val fromLargeWord_123 = 0wx7b : Word.word
val fromLargeWord_7FFFFFFF = 0wx7fffffff : Word.word
val fromLargeWord_FFFFFFFF = 0wxffffffff : Word.word
val toLargeInt_0 = 0 : LargeInt.int
val toLargeInt_7FFFFFFF = 2147483647 : LargeInt.int
val toLargeInt_FFFFFFFF = 1 : LargeInt.int
val toLargeIntX_0 = 0 : LargeInt.int
val toLargeIntX_7FFFFFFF = 2147483647 : LargeInt.int
val toLargeIntX_FFFFFFFF = ~1 : LargeInt.int
val fromLargeInt_0 = 0wx0 : Word.word
val fromLargeInt_123 = 0wx7b : Word.word
val fromLargeInt_m123 = 0wxffffff85 : Word.word
val fromLargeInt_7FFFFFFF = 0wx7fffffff : Word.word
val fromLargeInt_FFFFFFFF = 0wxffffffff : Word.word
val orb_0_0 = 0wx0 : Word.word
val orb_F0_0F = 0wxff : Word.word
val orb_0F_0F = 0wxf : Word.word
val xorb_0_0 = 0wx0 : Word.word
val xorb_F0_0F = 0wxff : Word.word
val xorb_0F_0F = 0wx0 : Word.word
val andb_0_0 = 0wx0 : Word.word
val andb_F0_0F = 0wx0 : Word.word
val andb_0F_0F = 0wxf : Word.word
val notb_0 = 0wxffffffff : Word.word
val notb_F0 = 0wxffffff0f : Word.word
val leftShift_0_0 = 0wx0 : Word.word
val leftShift_1_0 = 0wx1 : Word.word
val leftShift_1_1 = 0wx2 : Word.word
val leftShift_1_2 = 0wx4 : Word.word
val leftShift_1_max_m1 = 0wx80000000 : Word.word
val leftShift_1_max = 0wx0 : Word.word
val leftShift_FF_1 = 0wx1fe : Word.word
val leftShift_FF_2 = 0wx3fc : Word.word
val leftShift_FF_max_m1 = 0wx80000000 : Word.word
val leftShift_FF_max = 0wx0 : Word.word
val logicalRightShift_0_0 = 0wx0 : Word.word
val logicalRightShift_1_0 = 0wx1 : Word.word
val logicalRightShift_1_1 = 0wx0 : Word.word
val logicalRightShift_2_1 = 0wx1 : Word.word
val logicalRightShift_max_1 = 0wx7fffffff : Word.word
val logicalRightShift_max_max_m1 = 0wx1 : Word.word
val logicalRightShift_max_max = 0wx0 : Word.word
val arithmeticRightShift_0_0 = 0wx0 : Word.word
val arithmeticRightShift_1_0 = 0wx1 : Word.word
val arithmeticRightShift_1_1 = 0wx0 : Word.word
val arithmeticRightShift_2_1 = 0wx1 : Word.word
val arithmeticRightShift_max_1 = 0wxffffffff : Word.word
val arithmeticRightShift_max_max_m1 = 0wxffffffff : Word.word
val arithmeticRightShift_max_max = 0wxffffffff : Word.word
val add_pp = 0wxb : Word.word
val add_zp = 0wx3 : Word.word
val add_pz = 0wx8 : Word.word
val add_zz = 0wx0 : Word.word
val sub_pp = 0wx5 : Word.word
val sub_zp = 0wxfffffffd : Word.word
val sub_pz = 0wx8 : Word.word
val sub_zz = 0wx0 : Word.word
val mul_pp = 0wx6 : Word.word
val mul_zp = 0wx0 : Word.word
val mul_pz = 0wx0 : Word.word
val mul_zz = 0wx0 : Word.word
val div_pp = 0wx2 : Word.word
val div_zp = 0wx0 : Word.word
val mod_pp = 0wx2 : Word.word
val mod_zp = 0wx0 : Word.word
val compare_ppL = LESS : order
val compare_ppE = EQUAL : order
val compare_ppG = GREATER : order
val compare_zp = LESS : order
val compare_pz = GREATER : order
val compare_zz = EQUAL : order
val gt_ppL = false : bool
val gt_ppE = false : bool
val gt_ppG = true : bool
val gt_zp = false : bool
val gt_pz = true : bool
val gt_zz = false : bool
val ge_ppL = false : bool
val ge_ppE = true : bool
val ge_ppG = true : bool
val ge_zp = false : bool
val ge_pz = true : bool
val ge_zz = true : bool
val lt_ppL = true : bool
val lt_ppE = false : bool
val lt_ppG = false : bool
val lt_zp = true : bool
val lt_pz = false : bool
val lt_zz = false : bool
val le_ppL = true : bool
val le_ppE = true : bool
val le_ppG = false : bool
val le_zp = true : bool
val le_pz = false : bool
val le_zz = true : bool
val min_ppL = 0wx3 : Word.word
val min_ppE = 0wx8 : Word.word
val min_ppG = 0wx3 : Word.word
val min_zp = 0wx0 : Word.word
val min_pz = 0wx0 : Word.word
val min_zz = 0wx0 : Word.word
val max_ppL = 0wx8 : Word.word
val max_ppE = 0wx8 : Word.word
val max_ppG = 0wx8 : Word.word
val max_zp = 0wx3 : Word.word
val max_pz = 0wx8 : Word.word
val max_zz = 0wx0 : Word.word
val fmt_bin_z = "0" : string
val fmt_bin_p1 = "1" : string
val fmt_bin_p2 = "1111011" : string
val fmt_oct_z = "0" : string
val fmt_oct_p1 = "1" : string
val fmt_oct_p2 = "173" : string
val fmt_dec_z = "0" : string
val fmt_dec_p1 = "1" : string
val fmt_dec_p2 = "123" : string
val fmt_hex_z = "0" : string
val fmt_hex_p1 = "1" : string
val fmt_hex_p2 = "7B" : string
val toString_z = "0" : string
val toString_p1 = "1" : string
val toString_p2 = "7B" : string
val fromString_null = NONE : Word.word option
val fromString_nonum = NONE : Word.word option
val fromString_z1 = SOME 0wx0 : Word.word option
val fromString_z2 = SOME 0wx0 : Word.word option
val fromString_z12 = SOME 0wx0 : Word.word option
val fromString_p1 = SOME 0wx1abc : Word.word option
val fromString_p12 = SOME 0wx1abc : Word.word option
val fromString_p2 = SOME 0wx123abc : Word.word option
val fromString_p22 = SOME 0wx123abc : Word.word option
val reader = fn : ['a .'a list -> ('a * 'a list) option]
val scan = fn : StringCvt.radix -> string -> (Word.word * char list) option
val scan_bin_null = NONE : (Word.word * char list) option
val scan_bin_0 = SOME (0wx0,[]) : (Word.word * char list) option
val scan_bin_01 = SOME (0wx0,[]) : (Word.word * char list) option
val scan_bin_1 = SOME (0wx1,[]) : (Word.word * char list) option
val scan_bin_1b = SOME (0wx1,[#"a",#"b",#"c",#"g",#"h",#"i"]) : (Word.word * char list) option
val scan_bin_1c = SOME (0wx1,[]) : (Word.word * char list) option
val scan_oct_null = NONE : (Word.word * char list) option
val scan_oct_0 = SOME (0wx0,[]) : (Word.word * char list) option
val scan_oct_01 = SOME (0wx0,[]) : (Word.word * char list) option
val scan_oct_1 = SOME (0wx53,[]) : (Word.word * char list) option
val scan_oct_1b = SOME (0wx53,[#"8",#"9",#"a"]) : (Word.word * char list) option
val scan_oct_1c = SOME (0wx53,[]) : (Word.word * char list) option
val scan_dec_null = NONE : (Word.word * char list) option
val scan_dec_0 = SOME (0wx0,[]) : (Word.word * char list) option
val scan_dec_01 = SOME (0wx0,[]) : (Word.word * char list) option
val scan_dec_1 = SOME (0wx7b,[]) : (Word.word * char list) option
val scan_dec_1b = SOME (0wx3065,[#"a"]) : (Word.word * char list) option
val scan_dec_1c = SOME (0wx7b,[]) : (Word.word * char list) option
val scan_hex_null = NONE : (Word.word * char list) option
val scan_hex_head1 = NONE : (Word.word * char list) option
val scan_hex_head2 = NONE : (Word.word * char list) option
val scan_hex_head3 = NONE : (Word.word * char list) option
val scan_hex_head4 = NONE : (Word.word * char list) option
val scan_hex_0 = SOME (0wx0,[]) : (Word.word * char list) option
val scan_hex_01 = SOME (0wx0,[]) : (Word.word * char list) option
val scan_hex_0h1 = SOME (0wx0,[]) : (Word.word * char list) option
val scan_hex_0h2 = SOME (0wx0,[]) : (Word.word * char list) option
val scan_hex_0h3 = SOME (0wx0,[]) : (Word.word * char list) option
val scan_hex_0h4 = SOME (0wx0,[]) : (Word.word * char list) option
val scan_hex_1 = SOME (0wx123,[]) : (Word.word * char list) option
val scan_hex_1b = SOME (0wx12aaff,[#"G",#"g"]) : (Word.word * char list) option
val scan_hex_1b_h1 = SOME (0wx12aaff,[#"G",#"g"]) : (Word.word * char list) option
val scan_hex_1b_h2 = SOME (0wx12aaff,[#"G",#"g"]) : (Word.word * char list) option
val scan_hex_1b_h3 = SOME (0wx12aaff,[#"G",#"g"]) : (Word.word * char list) option
val scan_hex_1b_h4 = SOME (0wx12aaff,[#"G",#"g"]) : (Word.word * char list) option
val scan_hex_1c = SOME (0wx123,[]) : (Word.word * char list) option
val scan_skipWS1 = SOME (0wx7b,[]) : (Word.word * char list) option
val scan_skipWS2 = SOME (0wx7b,[]) : (Word.word * char list) option

