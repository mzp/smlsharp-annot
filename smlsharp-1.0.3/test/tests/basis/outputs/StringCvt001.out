val reader = fn : ['a.'a list -> ('a * 'a list) option]
val padLeft0 = "xx" : string
val padLeft1 = "xx" : string
val padLeft2 = "xx" : string
val padLeft3 = "axx" : string
val padLeft4 = "aaxx" : string
val padRight0 = "xx" : string
val padRight1 = "xx" : string
val padRight2 = "xx" : string
val padRight3 = "xxa" : string
val padRight4 = "xxaa" : string
val splitlFun = fn : char -> bool
val splitl0 = ("",[]) : string * char list
val splitl10 = ("",[#"x"]) : string * char list
val splitl11 = ("a",[]) : string * char list
val splitl200 = ("",[#"x",#"y"]) : string * char list
val splitl201 = ("",[#"x",#"a"]) : string * char list
val splitl210 = ("a",[#"y"]) : string * char list
val splitl211 = ("ab",[]) : string * char list
val splitl3000 = ("",[#"x",#"y",#"z"]) : string * char list
val splitl3001 = ("",[#"x",#"y",#"a"]) : string * char list
val splitl3010 = ("",[#"x",#"a",#"z"]) : string * char list
val splitl3100 = ("a",[#"y",#"z"]) : string * char list
val splitl3110 = ("ab",[#"z"]) : string * char list
val splitl3111 = ("abc",[]) : string * char list
val takelFun = fn : char -> bool
val takel0 = "" : string
val takel10 = "" : string
val takel11 = "a" : string
val takel200 = "" : string
val takel201 = "" : string
val takel210 = "a" : string
val takel211 = "ab" : string
val takel3000 = "" : string
val takel3001 = "" : string
val takel3010 = "" : string
val takel3100 = "a" : string
val takel3110 = "ab" : string
val takel3111 = "abc" : string
val droplFun = fn : char -> bool
val dropl0 = [] : char list
val dropl10 = [#"x"] : char list
val dropl11 = [] : char list
val dropl200 = [#"x",#"y"] : char list
val dropl201 = [#"x",#"a"] : char list
val dropl210 = [#"y"] : char list
val dropl211 = [] : char list
val dropl3000 = [#"x",#"y",#"z"] : char list
val dropl3001 = [#"x",#"y",#"a"] : char list
val dropl3010 = [#"x",#"a",#"z"] : char list
val dropl3100 = [#"y",#"z"] : char list
val dropl3110 = [#"z"] : char list
val dropl3111 = [] : char list
val skipWS0 = [] : char list
val skipWS1 = [#"a"] : char list
val skipWS2 = [#"a"] : char list
val scanStringFun = fn : ['a,'b,'c.('a -> ('c * 'b) option) -> 'a -> (('c * 'c) * 'b) option]
val scanString0 = NONE : (char * char) option
val scanString1 = SOME (#"a",#"a") : (char * char) option
val scanString2 = SOME (#"a",#"a") : (char * char) option
