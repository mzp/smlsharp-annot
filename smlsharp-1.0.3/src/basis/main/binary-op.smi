_require "Int.smi"
_require "IntInf.smi"
_require "Word.smi"
_require "Word8.smi"
_require "RealClass.smi"
_require "Real.smi"
_require "Real32.smi"
_require "Char.smi"
_require "String.smi"

infix 7 * / div mod
infix 6 + -
infix 4 = <> > >= < <=

val <> : ''a * ''a -> bool

val + =
    case 'a in 'a * 'a -> 'a of
      int => SMLSharp.Int.add
    | word => SMLSharp.Word.add
    | Word8.word => SMLSharp.Word8.add
    | IntInf.int => IntInf.+
    | real => SMLSharp.Real.add
    | Real32.real => SMLSharp.Real32.add

val - =
    case 'a in 'a * 'a -> 'a of
      int => SMLSharp.Int.sub
    | word => SMLSharp.Word.sub
    | Word8.word => SMLSharp.Word8.sub
    | IntInf.int => IntInf.-
    | real => SMLSharp.Real.sub
    | Real32.real => SMLSharp.Real32.sub

val * =
    case 'a in 'a * 'a -> 'a of
      int => SMLSharp.Int.mul
    |  word => SMLSharp.Word.mul
    | Word8.word => SMLSharp.Word8.mul
    | IntInf.int => IntInf.*
    | real => SMLSharp.Real.mul
    | Real32.real => SMLSharp.Real32.mul

val div =
    case 'a in 'a * 'a -> 'a of
      int => SMLSharp.Int.div
    | word => SMLSharp.Word.div
    | Word8.word => SMLSharp.Word8.div
    | IntInf.int => IntInf.div

val mod =
    case 'a in 'a * 'a -> 'a of
      int => SMLSharp.Int.mod
    | word => SMLSharp.Word.mod
    | Word8.word => SMLSharp.Word8.mod
    | IntInf.int => IntInf.mod

val / =
    case 'a in 'a * 'a -> 'a of
      real => SMLSharp.Real.div
    | Real32.real => SMLSharp.Real32.div

val ~ =
    case 'a in 'a -> 'a of
      int => SMLSharp.Int.neg
    | word => SMLSharp.Word.neg
    | Word8.word => Word8.~
    | IntInf.int => IntInf.~
    | real => SMLSharp.Real.neg
    | Real32.real => SMLSharp.Real32.neg

val abs =
    case 'a in 'a -> 'a of
      int => SMLSharp.Int.abs
    | real => SMLSharp.Real.abs
    | Real32.real => SMLSharp.Real32.abs
    | IntInf.int => IntInf.abs

val < =
    case 'a in 'a * 'a -> bool of
      int => SMLSharp.Int.lt
    | word => SMLSharp.Word.lt
    | Word8.word => SMLSharp.Word8.lt
    | IntInf.int => IntInf.<
    | real => SMLSharp.Real.lt
    | Real32.real => SMLSharp.Real32.lt
    | string => String.<
    | char => SMLSharp.Char.lt

val > =
    case 'a in 'a * 'a -> bool of
      int => SMLSharp.Int.gt
    | word => SMLSharp.Word.gt
    | Word8.word => SMLSharp.Word8.gt
    | IntInf.int => IntInf.>
    | real => SMLSharp.Real.gt
    | Real32.real => SMLSharp.Real32.gt
    | string => String.>
    | char => SMLSharp.Char.gt

val <= =
    case 'a in 'a * 'a -> bool of
      int => SMLSharp.Int.lteq
    | word => SMLSharp.Word.lteq
    | Word8.word => SMLSharp.Word8.lteq
    | IntInf.int => IntInf.<=
    | real => SMLSharp.Real.lteq
    | Real32.real => SMLSharp.Real32.lteq
    | string => String.<=
    | char => SMLSharp.Char.lteq

val >= =
    case 'a in 'a * 'a -> bool of
      int => SMLSharp.Int.gteq
    | word => SMLSharp.Word.gteq
    | Word8.word => SMLSharp.Word8.gteq
    | IntInf.int => IntInf.>=
    | real => SMLSharp.Real.gteq
    | Real32.real => SMLSharp.Real32.gteq
    | string => String.>=
    | char => SMLSharp.Char.gteq

