_require "../../../basis.smi"
_require "../../../smlnj-lib/Util/binary-set-fn.smi"
_require "../../control/main/Control.ppg.smi"
_require "../../name/main/LocalID.smi"
_require "../../yaanormal/main/ANormal.ppg.smi"

structure CallAnalysis = 
struct
  datatype routine =
           EntryFunction of YAANormal.funDecl
         | Code of YAANormal.codeDecl
         | Continue of YAANormal.id
  type routineInfo =
       {
        label: YAANormal.id,
        routine: routine,
        (* number of non-tail local calls *)
        callCount: int,
        (* number of tail local calls except self tail call *)
        tailCallCount: int,
        (* number of self recursive tail local calls *)
        selfCallCount: int,
        (* initial available handlers; NONE = outside handler is enabled *)
        handlers: YAANormal.id option list
       }
  val analyze : YAANormal.clusterDecl -> routineInfo list
end
