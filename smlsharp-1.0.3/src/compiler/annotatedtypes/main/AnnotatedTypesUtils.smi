_require "../../../basis.smi"
_require "../../../compiler-utils/env/main/SEnv.smi"
_require "../../../compiler-utils/env/main/LabelEnv.smi"

_require "../../control/main/Control.ppg.smi"
_require "../../name/main/LocalID.smi"
_require "../../types/main/BuiltinEnv.smi"
_require "../../types/main/Types.ppg.smi"
_require "../../constantterm/main/ConstantTerm.ppg.smi"
_require "ANNOTATEDTYPESUTILS.sig"
_require "AnnotatedTypes.ppg.smi"

structure AnnotatedTypesUtils =
struct
  val constDefaultTy : ConstantTerm.constant -> AnnotatedTypes.ty
  val expandFunTy : AnnotatedTypes.ty
                    -> {annotation:AnnotatedTypes.functionAnnotation ref,
                        argTyList:AnnotatedTypes.ty list,
                        bodyTy:AnnotatedTypes.ty,
                        funStatus:AnnotatedTypes.funStatus}
  val tpappTy : AnnotatedTypes.ty * AnnotatedTypes.ty list
                -> AnnotatedTypes.ty
  val cardinality : AnnotatedTypes.ty -> int
  val convertNumericalLabel : int -> string
  val convertLabel : string -> string
  val freshFunctionAnnotation : unit -> AnnotatedTypes.functionAnnotation ref
  val newClosureFunStatus : unit -> AnnotatedTypes.funStatus
  val makeClosureFunTy : AnnotatedTypes.ty list * AnnotatedTypes.ty
                         -> AnnotatedTypes.ty
  val isLocalFunTy : AnnotatedTypes.ty -> bool
end
