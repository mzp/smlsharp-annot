_require "../../../basis.smi"
_require "../../../compiler-utils/env/main/PathEnv.smi"
_require "../../../compiler-utils/env/main/SEnv.smi"
_require "../../../compiler-utils/env/main/LabelEnv.smi"

_require "../../absyn/main/Absyn.ppg.smi"
_require "../../builtin/main/BuiltinName.smi"
_require "../../builtin/main/BuiltinPrimitive.ppg.smi"
_require "../../builtin/main/BuiltinType.ppg.smi"
_require "../../constantterm/main/ConstantTerm.ppg.smi"
_require "../../control/main/Control.ppg.smi"
_require "../../control/main/Loc.ppg.smi"
_require "../../name/main/LocalID.smi"
_require "../../recordcalc/main/RecordCalc.ppg.smi"
_require "../../typedlambda/main/TypedLambda.ppg.smi"
_require "../../types/main/BuiltinEnv.smi"
_require "../../types/main/Types.ppg.smi"
_require "../../types/main/TypesUtils.smi"

structure DatatypeCompilation =
struct
  val compile : RecordCalc.rcdecl list -> TypedLambda.tldecl list
end
