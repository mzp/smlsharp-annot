_require "../../../basis.smi"
_require "../../../smlformat-lib.smi"
_require "../../control/main/Loc.ppg.smi"
_require "../../name/main/LocalID.smi"
_require "../../util/main/SmlppgUtil.ppg.smi"

structure X86Asm =
struct
  type loc = Loc.loc
  val att_loc : loc -> SMLFormat.FormatExpression.expression list
  val format_loc : loc -> SMLFormat.FormatExpression.expression list
  val darwin_loc : loc -> SMLFormat.FormatExpression.expression list
  type localLabel = ClusterID.id * VarID.id
  val att_localLabel : localLabel -> SMLFormat.FormatExpression.expression list
  val format_localLabel : localLabel 
			  -> SMLFormat.FormatExpression.expression list
  val darwin_localLabel : localLabel
			  -> SMLFormat.FormatExpression.expression list
  type symbol = string
  val att_symbol : symbol -> SMLFormat.FormatExpression.expression list
  val format_symbol : symbol -> SMLFormat.FormatExpression.expression list
  val darwin_symbol : symbol -> SMLFormat.FormatExpression.expression list
  type linkPtrSymbol = string
  val att_linkPtrSymbol : linkPtrSymbol 
			  -> SMLFormat.FormatExpression.expression list
  val format_linkPtrSymbol : linkPtrSymbol
			     -> SMLFormat.FormatExpression.expression list
  val darwin_linkPtrSymbol : linkPtrSymbol
			     -> SMLFormat.FormatExpression.expression list
  type linkStubSymbol = string
  val att_linkStubSymbol : linkStubSymbol
			   -> SMLFormat.FormatExpression.expression list
  val format_linkStubSymbol : linkStubSymbol
			      -> SMLFormat.FormatExpression.expression list
  val darwin_linkStubSymbol : linkStubSymbol
			      -> SMLFormat.FormatExpression.expression list
  datatype label =
      LOCAL of localLabel
    | SYMBOL of symbol
    | LINKPTR of linkPtrSymbol
    | LINKSTUB of linkStubSymbol
    | ELF_GOTOFF of label
    | ELF_GOT of label
    | NULL
  val att_label : label -> SMLFormat.FormatExpression.expression list
  val format_label : label -> SMLFormat.FormatExpression.expression list
  val darwin_label : label -> SMLFormat.FormatExpression.expression list
  datatype imm =
       INT of Int32.int
     | WORD of Word32.word
     | LABEL of label
     | CONSTSUB of imm * imm
     | CONSTADD of imm * imm
     | CURRENTPOS
  val att_imm : imm -> SMLFormat.FormatExpression.expression list
  val format_imm : imm -> SMLFormat.FormatExpression.expression list
  val darwin_imm : imm -> SMLFormat.FormatExpression.expression list
  datatype reg = EAX | EBX | ECX | EDX | ESI | EDI | EBP | ESP
  val att_reg : reg -> SMLFormat.FormatExpression.expression list
  val att_w_reg : reg -> SMLFormat.FormatExpression.expression list
  val format_reg : reg -> SMLFormat.FormatExpression.expression list
  val darwin_reg : reg -> SMLFormat.FormatExpression.expression list
  datatype r16 = X of reg
  val att_r16 : r16 -> SMLFormat.FormatExpression.expression list
  val format_r16 : r16 -> SMLFormat.FormatExpression.expression list
  val darwin_r16 : r16 -> SMLFormat.FormatExpression.expression list
  datatype r8 = XH of reg | XL of reg
  val att_r8 : r8 -> SMLFormat.FormatExpression.expression list
  val format_r8 : r8 -> SMLFormat.FormatExpression.expression list
  val darwin_r8 : r8 -> SMLFormat.FormatExpression.expression list
  datatype sti = ST of int
  val att_sti : sti -> SMLFormat.FormatExpression.expression list
  val format_sti : sti -> SMLFormat.FormatExpression.expression list
  val darwin_sti : sti -> SMLFormat.FormatExpression.expression list
  datatype mem =
      DISP of imm * mem
    | ABSADDR of imm
    | BASE of reg
    | INDEX of reg * int
    | BASEINDEX of reg * reg * int
  val att_withDisp_mem : SMLFormat.FormatExpression.expression list
			 -> mem -> SMLFormat.FormatExpression.expression list
  val att_mem : mem -> SMLFormat.FormatExpression.expression list
  val format_withDisp_mem : SMLFormat.FormatExpression.expression list
			    -> mem -> SMLFormat.FormatExpression.expression list
  val format_mem : mem -> SMLFormat.FormatExpression.expression list
  val darwin_withDisp_mem : SMLFormat.FormatExpression.expression list
			    -> mem -> SMLFormat.FormatExpression.expression list
  val darwin_mem : mem -> SMLFormat.FormatExpression.expression list
  datatype rm8 = R8 of r8 | M8 of mem
  val att_rm8 : rm8 -> SMLFormat.FormatExpression.expression list
  val format_rm8 : rm8 -> SMLFormat.FormatExpression.expression list
  val darwin_rm8 : rm8 -> SMLFormat.FormatExpression.expression list
  datatype rmi8_ = R_8 of r8 | M_8 of mem | I_8 of imm
  val att_rmi8_ : SMLFormat.FormatExpression.expression list *
		  SMLFormat.FormatExpression.expression list
		  -> rmi8_ -> SMLFormat.FormatExpression.expression list
  val format_rmi8_ : SMLFormat.FormatExpression.expression list * 
		     SMLFormat.FormatExpression.expression list 
		     -> rmi8_ -> SMLFormat.FormatExpression.expression list
  val darwin_rmi8_ : SMLFormat.FormatExpression.expression list *
		     SMLFormat.FormatExpression.expression list 
		     -> rmi8_ -> SMLFormat.FormatExpression.expression list
  type rmi8 = rmi8_
  val att_rmi8 : rmi8 -> SMLFormat.FormatExpression.expression list
  val format_rmi8 : rmi8 -> SMLFormat.FormatExpression.expression list
  val darwin_rmi8 : rmi8 -> SMLFormat.FormatExpression.expression list
  datatype rm16 = R16 of r16 | M16 of mem
  val att_rm16 : rm16 -> SMLFormat.FormatExpression.expression list
  val format_rm16 : rm16 -> SMLFormat.FormatExpression.expression list
  val darwin_rm16 :rm16 -> SMLFormat.FormatExpression.expression list
  datatype rmi16_ = R_16 of r16 | M_16 of mem | I_16 of imm
  val att_rmi16_ : SMLFormat.FormatExpression.expression list *
		   SMLFormat.FormatExpression.expression list 
		   -> rmi16_ -> SMLFormat.FormatExpression.expression list
  val format_rmi16_ : SMLFormat.FormatExpression.expression list * 
		      SMLFormat.FormatExpression.expression list 
		      -> rmi16_ -> SMLFormat.FormatExpression.expression list
  val darwin_rmi16_ : SMLFormat.FormatExpression.expression list * 
		      SMLFormat.FormatExpression.expression list 
		      -> rmi16_ -> SMLFormat.FormatExpression.expression list
  type rmi16 = rmi16_
  val att_rmi16 : rmi16 -> SMLFormat.FormatExpression.expression list
  val format_rmi16 : rmi16 -> SMLFormat.FormatExpression.expression list
  val darwin_rmi16 : rmi16 -> SMLFormat.FormatExpression.expression list
  datatype rm32 = R of reg | M of mem
  val att_rm32 : rm32 -> SMLFormat.FormatExpression.expression list
  val format_rm32 : rm32 -> SMLFormat.FormatExpression.expression list
  val darwin_rm32 : rm32 -> SMLFormat.FormatExpression.expression list
  datatype rmi32_ = R_ of reg | M_ of mem | I_ of imm
  val att_rmi32_ : SMLFormat.FormatExpression.expression list * 
		   SMLFormat.FormatExpression.expression list
		   -> rmi32_ -> SMLFormat.FormatExpression.expression list
  val format_rmi32_ : SMLFormat.FormatExpression.expression list *
		      SMLFormat.FormatExpression.expression list 
		      -> rmi32_ -> SMLFormat.FormatExpression.expression list
  val darwin_rmi32_ : SMLFormat.FormatExpression.expression list *
		      SMLFormat.FormatExpression.expression list 
		      -> rmi32_ -> SMLFormat.FormatExpression.expression list
  type rmi32 = rmi32_
  val att_rmi32 : rmi32 -> SMLFormat.FormatExpression.expression list
  val format_rmi32 : rmi32 -> SMLFormat.FormatExpression.expression list
  val darwin_rmi32 : rmi32 -> SMLFormat.FormatExpression.expression list
  type jump = rmi32_
  val att_jump : jump -> SMLFormat.FormatExpression.expression list
  val format_jump : jump -> SMLFormat.FormatExpression.expression list
  val darwin_jump : jump -> SMLFormat.FormatExpression.expression list
  datatype sectionName =
      TextSection
    | DataSection
    | Literal4Section
    | Literal8Section
    | CStringSection
    | ConstSection
    | ConstDataSection
  val att_sectionName : sectionName
			-> SMLFormat.FormatExpression.expression list
  val format_sectionName : sectionName
			   -> SMLFormat.FormatExpression.expression list
  val darwin_sectionName : sectionName
			   -> SMLFormat.FormatExpression.expression list
  datatype cc =
      O | NO | B | AE | E | NE | BE | A | S | NS | P | NP | L | GE | LE | G
  val att_cc : cc -> SMLFormat.FormatExpression.expression list
  val format_cc : cc -> SMLFormat.FormatExpression.expression list
  val darwin_cc : cc -> SMLFormat.FormatExpression.expression list
  datatype instruction =
      NOP
    | MOVB of rm8 * rmi8
    | MOVW of rm16 * rmi16
    | MOVL of rm32 * rmi32
    | LEAL of reg * mem
    | CBW
    | CWDE
    | CDQ
    | MOVZBW of r16 * rm8
    | MOVZBL of reg * rm8
    | MOVZWL of reg * rm16
    | MOVSBW of r16 * rm8
    | MOVSBL of reg * rm8
    | MOVSWL of reg * rm16
    | CLD
    | REP_MOVSB
    | REP_STOSB
    | ADDB of rm8 * rmi8
    | ADDW of rm16 * rmi16
    | ADDL of rm32 * rmi32
    | SUBB of rm8 * rmi8
    | SUBW of rm16 * rmi16
    | SUBL of rm32 * rmi32
    | IMULL of rm32
    | IMULL2 of reg * rmi32
    | IMULL3 of reg * rm32 * imm
    | MULL of rm32
    | IDIVL of rm32
    | DIVL of rm32
    | ANDB of rm8 * rmi8
    | ANDW of rm16 * rmi16
    | ANDL of rm32 * rmi32
    | ORB of rm8 * rmi8
    | ORW of rm16 * rmi16
    | ORL of rm32 * rmi32
    | XORL of rm32 * rmi32
    | SHLL of rm32 * int
    | SHLL_CL of rm32
    | SHRL of rm32 * int
    | SHRL_CL of rm32
    | SARL of rm32 * int
    | SARL_CL of rm32
    | NOTL of rm32
    | NEGL of rm32
    | CMPB of rm8 * rmi8
    | CMPL of rm32 * rmi32
    | TESTB of rm8 * rmi8
    | TESTL of rm32 * rmi32
    | SET of cc * rm8
    | J of cc * localLabel * localLabel
    | JMP of jump * localLabel list
    | CALL of jump
    | RET of imm option
    | LEAVE
    | PUSHL of rmi32
    | POPL of rm32
    | FLDS of mem
    | FLDL of mem
    | FLDT of mem
    | FLD of sti
    | FILDS of mem
    | FILDL of mem
    | FILDQ of mem
    | FSTPS of mem
    | FSTPL of mem
    | FSTPT of mem
    | FSTP of sti
    | FISTPS of mem
    | FISTPL of mem
    | FISTPQ of mem
    | FXCH of sti
    | FADDS of mem
    | FADDL of mem
    | FADD of sti * sti
    | FADDP of sti
    | FSUBS of mem
    | FSUBL of mem
    | FSUB of sti * sti
    | FSUBP of sti
    | FSUBRS of mem
    | FSUBRL of mem
    | FSUBR of sti * sti
    | FSUBRP of sti
    | FMULS of mem
    | FMULL of mem
    | FMUL of sti * sti
    | FMULP of sti
    | FDIVS of mem
    | FDIVL of mem
    | FDIV of sti * sti
    | FDIVP of sti
    | FDIVRS of mem
    | FDIVRL of mem
    | FDIVR of sti * sti
    | FDIVRP of sti
    | FABS
    | FCHS
    | FPREM
    | FUCOM of sti
    | FUCOMP of sti
    | FUCOMPP
    | FSTSW of mem
    | FSTSW_AX
    | FINCSTP
    | FWAIT
    | FNCLEX
    | FFREE of sti
    | FNSTCW of mem
    | FLDCW of mem
    | Label of localLabel * loc option
    | Symbol of symbol * loc option
    | Global of symbol
    | Align of {align:int, filler:word}
    | Section of sectionName
    | ImmData of imm
    | BytesData of Word8.word list
    | AsciiData of string
    | SpaceData of int
    | LinkPtrEntry of symbol
    | LinkStubEntry of symbol
    | GET_PC_THUNK_Decl of symbol
    | Comm of symbol * {size: int}
  val att_instruction : instruction
			-> SMLFormat.FormatExpression.expression list
  val format_instruction : instruction
			   -> SMLFormat.FormatExpression.expression list
  val darwin_instruction : instruction
			   -> SMLFormat.FormatExpression.expression list
  type program = instruction list
  val att_program : program -> SMLFormat.FormatExpression.expression list
  val darwin_program : program -> SMLFormat.FormatExpression.expression list
  val format_program : program -> SMLFormat.FormatExpression.expression list
  datatype dummyNextToplevel = DUMMY_NEXT_TOPLEVEL of symbol
  val att_dummyNextToplevel : dummyNextToplevel
			      -> SMLFormat.FormatExpression.expression list
  val format_dummyNextToplevel : dummyNextToplevel
				 -> SMLFormat.FormatExpression.expression list
  val darwin_dummyNextToplevel : dummyNextToplevel
				 -> SMLFormat.FormatExpression.expression list
  type nextDummy = dummyNextToplevel list
  val att_nextDummy : nextDummy -> SMLFormat.FormatExpression.expression list
  val darwin_nextDummy : nextDummy -> SMLFormat.FormatExpression.expression list
  val format_nextDummy : nextDummy -> SMLFormat.FormatExpression.expression list
end
