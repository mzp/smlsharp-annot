_require "../../../basis.smi"
_require "../../../smlformat-lib.smi"
_require "../../control/main/Control.ppg.smi"
_require "../../name/main/LocalID.smi"
_require "../../util/main/TermFormat.smi"
_require "RTL.ppg.smi"
_require "RTLEdit.smi"
_require "RTLUtils.smi"
_require "RTLEMIT.sig"
_require "RTLSTABILIZE.sig"

functor RTLStabilize (
  A : sig
    structure Emit : sig
      structure Target : sig
	type reg
	type program
      end
      type frameLayout
      val format_frameLayout : frameLayout TermFormat.formatter
      val emit : {regAlloc: Target.reg VarID.Map.map,
		  layoutMap: frameLayout ClusterID.Map.map}
		 -> RTL.program
		 -> Target.program
      val formatOf : RTL.ty -> RTL.format
      val formatOfGeneric : {size: int, align: int}
    end
  end
) =
struct
  structure Target =
  struct
    type reg = A.Emit.Target.reg 
  end
  val stabilize : RTL.program -> RTL.program
end
