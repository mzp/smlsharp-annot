_require "../../../basis.smi"
_require "../../../smlnj-lib/Util/binary-map-fn.smi"
_require "../../control/main/Control.ppg.smi"
_require "../../systemdef/main/BasicTypes.smi"
_require "../../name/main/LocalID.smi"
_require "../../util/main/ListSorter.smi"
_require "RTL.ppg.smi"
_require "RTLEdit.smi"
_require "RTLUtils.smi"
_require "RTLLiveness.smi"

structure FrameLayout =
struct
  val allocate :
      {
        preOffset: word,
        postOffset: word,
        frameAlign: int,
        wordSize: int,
        pointerSize: int,
        frameHeaderOffset: int,
        frameOffset: {frameSize: int, offset: int} -> int
      } ->
      RTL.cluster ->
      {
        frameSize: int,
        slotIndex: int VarID.Map.map,
        initCode: RTL.instruction list,
        frameCode: RTL.var list -> RTL.instruction list
      }
end
