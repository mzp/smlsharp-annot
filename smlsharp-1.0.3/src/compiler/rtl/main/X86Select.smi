_require "../../../basis.smi"
_require "../../../compiler-utils/env/main/SEnv.smi"
_require "../../../compiler-utils/env/main/SSet.smi"

_require "../../control/main/Control.ppg.smi"
_require "../../systemdef/main/BasicTypes.smi"
_require "../../name/main/LocalID.smi"
_require "../../util/main/TermFormat.smi"
_require "../../util/main/BigInt_IntInf.smi"
_require "../../absyn/main/Absyn.ppg.smi"
_require "../../abstractinstruction2/main/AbstractInstruction.ppg.smi"
_require "RTL.ppg.smi"
_require "RTLBackendContext.smi"
_require "RTLEdit.smi"
_require "RTLUtils.smi"
_require "RTLSELECT.sig"
_require "X86Emit.smi"
_require "X86Subst.smi"
_require "RTLDominate.smi"

structure X86Select =
struct
  val select :
      {mainSymbol: string} * AbstractInstruction2.program
      -> RTL.program
end
