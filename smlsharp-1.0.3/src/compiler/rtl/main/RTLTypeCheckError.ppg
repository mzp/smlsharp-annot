(* -*- sml -*- *)

structure RTLTypeCheckError =
struct

  (*%
   * @formatter(RTL.addr) RTL.format_addr
   * @formatter(RTL.clusterId) RTL.format_clusterId
   * @formatter(RTL.const) RTL.format_const
   * @formatter(RTL.dst) RTL.format_dst
   * @formatter(RTL.first) RTL.format_first
   * @formatter(RTL.format) RTL.format_format
   * @formatter(RTL.instruction) RTL.format_instruction
   * @formatter(RTL.label) RTL.format_label
   * @formatter(RTL.labelReference) RTL.format_labelReference
   * @formatter(RTL.last) RTL.format_last
   * @formatter(RTL.mem) RTL.format_mem
   * @formatter(RTL.operand) RTL.format_operand
   * @formatter(RTL.ptrTy) RTL.format_ptrTy
   * @formatter(RTL.slot) RTL.format_slot
   * @formatter(RTL.symbol) RTL.format_symbol
   * @formatter(RTL.symbolScope) RTL.format_symbolScope
   * @formatter(RTL.tid) RTL.format_tid
   * @formatter(RTL.ty) RTL.format_ty
   * @formatter(RTL.var) RTL.format_var
   *)
  datatype err =
      UndefinedGenericTid of RTL.tid
    | IntTyRequired of RTL.ty
    | PtrTyRequired of {actual:RTL.ty, require:RTL.ptrTy option}
    | TypeRequired of {actual:RTL.ty, require:RTL.ty}
    | UndefinedLabel of RTL.label
    | UndefinedSymbol of string
    | SymbolScopeMismatch of
      string * {actual:RTL.symbolScope, require:RTL.symbolScope}
    | SymbolTypeMismatch of string * {actual:RTL.ptrTy, require:RTL.ptrTy}
    | SymbolTypeMismatch2 of string * {actual:RTL.ptrTy, require:RTL.ptrTy}
    | SymbolLinkEntryNotFound of RTL.labelReference
    | SymbolLinkStubNotFound of RTL.labelReference
    | PointerTypeMismatch of RTL.const * RTL.ptrTy * RTL.ptrTy
    | DisplacementMustBeInt of RTL.const * {actual:RTL.ty}
    | IndexMustBeInt of RTL.var * {actual:RTL.ty}
    | DisplacementTypeMismatch of
      RTL.addr * {displacement:RTL.ty, addr:RTL.ptrTy}
    | IndexTypeMismatch of RTL.addr * {index:RTL.ty, addr:RTL.ptrTy}
    | UndefinedSlot of RTL.slot
    | SlotFormatMismatch of RTL.slot * {actual:RTL.format, require:RTL.format}
    | UndefinedVariable of RTL.var
    | VariableTypeMismatch of RTL.var * {actual:RTL.ty, require:RTL.ty}
    | ClobVariableIsLive of RTL.var
    | PreFrameExceeded of {actual:int, limit:int}
    | PostFrameExceeded of {actual:int, limit:int}
    | TypeAnnotationMismatch of RTL.operand * {actual:RTL.ty, require:RTL.ty}
    | NotHandlerEntry of RTL.label
    | NotStabilized of RTL.var
    | EnterFound
    | ExitFound
    | DstTypeMismatch of RTL.dst * {actual:RTL.ty, require:RTL.ty}
    | OperandTypeMismatch of RTL.operand * {actual:RTL.ty, require:RTL.ty}
    | OperandMustBeInt of RTL.operand * {actual:RTL.ty}
    | TypeMustBeInt of {actual:RTL.ty}
    | VarMustBePointer of RTL.var * {actual:RTL.ty}
    | AddrTypeMismatch of RTL.addr * {actual:RTL.ptrTy, require:RTL.ptrTy}
    | LabelTypeMismatch of RTL.labelReference * {actual:RTL.ty, require:RTL.ty}
    | ConstTypeMismatch of RTL.const * {actual:RTL.ty, require:RTL.ty}
    | MemTypeMismatch of RTL.mem * {actual:RTL.ty, require:RTL.ty}
    | TypeMismatchAcrossBlock of
      RTL.var * {succ:RTL.label, thisBlock:RTL.ty, succBlock:RTL.ty}
    | RequireLiveVarAcrossBlock of RTL.var * {succ:RTL.label}
    | RequireLiveSlotAcrossBlock of RTL.slot * {succ:RTL.label}
    | InconsistLabel of RTL.label * {key:RTL.label}
    | VarNotFoundInLiveOut of RTL.var
    | SlotNotFoundInLiveOut of RTL.slot
    | DuplicateVariable of RTL.var * RTL.var
    | DuplicateSlot of RTL.slot * RTL.slot
    | TypeMismatchWithLiveOut of RTL.var * {actual:RTL.ty, liveOut:RTL.ty}
    | (*% @format(first * errs) "At `" first "':" 2[ +1 errs ] *)
      ErrorAtFirst of RTL.first * errlist
    | (*% @format(insn * errs) "At `" insn "':" 2[ +1 errs ] *)
      ErrorAtMiddle of RTL.instruction * errlist
    | (*% @format(last * errs) "At `" last "':" 2[ +1 errs ] *)
      ErrorAtLast of RTL.last * errlist
    | (*% @format(label opt * errs) "In block " opt(label) ":" 2[ +1 errs ] *)
      ErrorInBlock of RTL.label option * errlist
    | (*% @format(clusterId * errs) "In cluster " clusterId ":" 2[ +1 errs ] *)
      ErrorInCluster of RTL.clusterId * errlist
    | (*% @format(symbol * errs) "In data " symbol ":" 2[ +1 errs ] *)
      ErrorInData of RTL.symbol * errlist
    | DoubledSymbol of RTL.symbol

  withtype errlist =
      (*%
       * @format(err errs)
       * errs(err)("," 1)
       *)
      err list
end
