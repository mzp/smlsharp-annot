_require "../../../basis.smi"
_require "../../../smlnj-lib/Util/lib-base.smi"
_require "../../../compiler-utils/env/main/SEnv.smi"
_require "../../../compiler-utils/env/main/LabelEnv.smi"
_require "../../../compiler-utils/env/main/PathEnv.smi"

_require "../../control/main/Control.ppg.smi"
_require "../../absyn/main/Absyn.ppg.smi"
_require "../../absyn/main/AbsynInterface.ppg.smi"
_require "../../name/main/LocalID.smi"
_require "../../types/main/BuiltinEnv.smi"
_require "../../types/main/IDCalc.ppg.smi"
_require "../../usererror/main/UserErrorUtils.smi"
_require "../../util/main/utils.smi"
_require "../../builtin/main/BuiltinType.ppg.smi"
_require "../../patterncalc/main/PatternCalcInterface.ppg.smi"
_require "EvalSig.smi"
_require "EvalTy.smi"
_require "FunctorUtils.smi"
_require "NameEvalEnv.ppg.smi"
_require "NameEvalError.ppg.smi"
_require "NameEvalInterface.smi"
_require "NameEvalUtils.smi"
_require "NormalizeTy.smi"

structure CheckProvide =
struct
  val checkPitopdecList :
      NameEvalEnv.topEnv
      -> (NameEvalEnv.topEnv * PatternCalcInterface.pitopdec list)
      -> IDCalc.icdecl list
end
