_require "../../../basis.smi"
_require "../../../compiler-utils/env/main/SEnv.smi"
_require "../../../compiler-utils/env/main/LabelEnv.smi"

_require "../../control/main/Control.ppg.smi"
_require "../../name/main/LocalID.smi"
_require "../../types/main/IDCalc.ppg.smi"
_require "../../types/main/tvarMap.smi"
_require "NameEvalEnv.ppg.smi"
_require "TfunVars.smi"

structure Subst =
struct
  type tvarSubst = IDCalc.ty TvarMap.map
  type tfvSubst = IDCalc.tfunkind ref TfvMap.map
  type conIdSubst = IDCalc.idstatus ConID.Map.map
  type exnIdSubst = ExnID.id ExnID.Map.map
  type subst =
      {conIdS:conIdSubst, exnIdS:exnIdSubst, tfvS:tfvSubst, tvarS:tvarSubst}
  val emptyConIdSubst : conIdSubst
  val emptyExnIdSubst : exnIdSubst
  val emptySubst : subst
  val emptyTvarSubst : tvarSubst
  val emptyTfvSubst : tfvSubst
  val substEnv : subst -> NameEvalEnv.env -> NameEvalEnv.env
  val substTy : subst -> IDCalc.ty -> IDCalc.ty
  val substTfvTy : tfvSubst -> IDCalc.ty -> IDCalc.ty
  val substTfvTfun : tfvSubst -> IDCalc.tfun -> IDCalc.tfun
  val substTfvEnv : tfvSubst -> NameEvalEnv.env -> NameEvalEnv.env
end
