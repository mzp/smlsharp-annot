_require "../../../basis.smi"
_require "../../../compiler-utils/env/main/SEnv.smi"
_require "../../../compiler-utils/env/main/PathEnv.smi"

_require "../../control/main/Control.ppg.smi"
_require "../../absyn/main/Absyn.ppg.smi"
_require "../../name/main/LocalID.smi"
_require "../../types/main/BuiltinEnv.smi"
_require "../../types/main/IDCalc.ppg.smi"
_require "../../usererror/main/UserErrorUtils.smi"
_require "../../patterncalc/main/PatternCalc.ppg.smi"
_require "EvalTy.smi"
_require "NameEvalEnv.ppg.smi"
_require "NameEvalError.ppg.smi"
_require "NameEvalUtils.smi"
_require "NormalizeTy.smi"
_require "SetLiftedTys.smi"
_require "Subst.smi"
_require "TfunVars.smi"

structure EvalSig =
struct
  val refreshSpecEnv : NameEvalEnv.env -> Subst.tfvSubst * NameEvalEnv.env
  val evalPlsig : NameEvalEnv.topEnv -> PatternCalc.plsigexp -> NameEvalEnv.env
end
