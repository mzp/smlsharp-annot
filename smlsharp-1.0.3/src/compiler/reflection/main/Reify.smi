_require "../../../basis.smi"
_require "../../../compiler-utils/env/main/SEnv.smi"
_require "../../../compiler-utils/env/main/LabelEnv.smi"
_require "../../../smlformat-lib.smi"

_require "../../typedcalc/main/TypedCalc.ppg.smi"
_require "../../typedcalc/main/TypedCalcUtils.smi"
_require "../../types/main/EvalIty.smi"
_require "../../types/main/BuiltinEnv.smi"
_require "../../builtin/main/BuiltinName.smi"
_require "../../types/main/Types.ppg.smi"
_require "../../types/main/IDCalc.ppg.smi"
_require "../../types/main/TypesUtils.smi"
_require "../../typeinference2/main/TypeInferenceUtils.smi"
_require "../../nameevaluation/main/NameEvalEnv.ppg.smi"
_require "../../nameevaluation/main/NameEvalUtils.smi"
_require "../../reflection/main/ReifiedTermData.smi"
_require "../../control/main/Control.ppg.smi"
_require "../../control/main/Loc.ppg.smi"
_require "../../name/main/LocalID.smi"
_require "../../absyn/main/Absyn.ppg.smi"
_require "../../util/main/SmlppgUtil.ppg.smi"

structure Reify =
struct
  val makeMonoApply : (TypedCalc.tpexp * Types.ty) option ref -> TypedCalc.tpexp -> TypedCalc.tpexp
  val reify : Types.ty * TypedCalc.tpexp -> TypedCalc.tpexp
  val reifyEnv : NameEvalEnv.env -> NameEvalEnv.env * TypedCalc.tpexp
  val reifySigE : NameEvalEnv.sigE -> TypedCalc.tpexp
  val reifyFunE : NameEvalEnv.funE -> TypedCalc.tpexp
  val reifyTopEnv : NameEvalEnv.topEnv -> NameEvalEnv.topEnv * TypedCalc.tpexp
end
